1、->移动端[token验证]  需要H5页面一块打包进apk中(ios之bundle,android之assets),需要跨桥取读取用户的token信息,ios可以通过js方法读取cookie获取关于session_id等一些列的信息:
而android需要JSBridge来注册一个获取token信息的管道实现.

2、->移动端[定时器]  在做H5春节活动'开宝箱 迎新春'时,里面有一个倒计时功能,android当应用在后台休眠时,定时器可以正常的运行,再打开与服务器上
的时间一致;而ios在滑动(UIView)或者后台休眠时会阻塞定时器的运行,导致各个设备看到的倒计时时间不一致,此时如果是H5页面和原生一块打到apk中有两
中解决方案:
    1、使用H5 Web Worker(多线程)让定时器代码在后台运行(仅有H5页面在浏览器中也适用)
    2、通过IOS客户端监控用户应用程序状态的变化,当唤醒进入应用页面时通过注册一个跨桥的方法去重新调用执行定时器逻辑的方法(不常用)
具体实现案例参见10.js_ninth中的1.2WebWorker定时器失效.html和worker.js

3、->缓存问题  如果是针对view处理缓存的话可以直接利用url重写在后面加一个new Date()时间戳;但如果是针对js文件,则最理想的办法是通过手动方式
去控制,当js文件发生变化以后,可以在后面加一个版本号来标识,而不是new Date()时间戳让它每次重新加载.例如:
    <script type="text/javascript" src="www.baidu.com/resources/js/common.js?v=20170328" ></script>

4、->自定义插件中的this问题  有时候页面比较简单且有重复性的功能组件时没必要使用大的类库或插件,自定义插件中会有好多this问题